----------------------------------------------------------------------------------------------------------------------------------------------------------------------
API -> Una API (del ingl√©s Application Programming Interface, o Interfaz de Programaci√≥n de Aplicaciones) es un conjunto de reglas y
definiciones que permite que diferentes aplicaciones se comuniquen entre s√≠. En t√©rminos sencillos, una API act√∫a como un puente
que permite que un software interact√∫e con otro.
¬øQu√© hace una API?
- Permite que una aplicaci√≥n solicite datos o servicios de otra.
- Define c√≥mo deben hacerse estas solicitudes (formatos, protocolos, endpoints, etc.).
- Establece qu√© se puede hacer (acceso, funciones permitidas, seguridad).
Ejemplo simple:
- Imagina que est√°s usando una aplicaci√≥n de clima en tu celular. Esa app no calcula el clima por s√≠ sola: hace
  una solicitud a una API meteorol√≥gica, que le env√≠a los datos del clima actual en tu ubicaci√≥n. La app simplemente muestra esos datos de forma amigable.
Tipos comunes de APIs:
- REST: Usa HTTP y es muy com√∫n en aplicaciones web.
- SOAP: M√°s estructurada, usada en entornos empresariales.
- GraphQL: Una alternativa moderna a REST, m√°s flexible.
- APIs de terceros: Como la API de Google Maps, la API de Twitter, etc.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
REST -> REST (Representational State Transfer) es un estilo de arquitectura para dise√±ar servicios web. Es una de las formas m√°s comunes de
construir APIs web hoy en d√≠a, gracias a su simplicidad y eficiencia.
¬øQu√© significa REST?
REST no es un lenguaje o un protocolo, sino un conjunto de principios y restricciones para crear servicios que usen HTTP para comunicarse.
Principios clave de REST
- Cliente-servidor: El cliente (como una app o navegador) y el servidor (que tiene los datos o funcionalidades) est√°n separados y se comunican mediante peticiones.
- Sin estado (stateless): Cada petici√≥n del cliente al servidor debe contener toda la informaci√≥n necesaria. El servidor no guarda el estado entre peticiones.
- Cach√©: Las respuestas pueden ser almacenadas temporalmente (cacheadas) para mejorar el rendimiento.
- Interfaz uniforme: Todas las interacciones usan un conjunto est√°ndar de operaciones HTTP:
    * GET: obtener datos.
    * POST: crear datos.
    * PUT: actualizar datos.
    * DELETE: eliminar datos.
- Acceso a recursos mediante URLs: Todo se trata como un "recurso" accesible a trav√©s de una URL. Ejemplo:
    * GET https://api.ejemplo.com/usuarios/123
- Representaciones: Los recursos pueden representarse en diferentes formatos, como JSON o XML (aunque hoy en d√≠a, JSON es el m√°s com√∫n).
Ejemplo de uso de una API REST
Sup√≥n que tienes una API para gestionar tareas (tareas):
- GET /tareas ‚Üí Lista todas las tareas.
- GET /tareas/1 ‚Üí Obtiene la tarea con ID 1.
- POST /tareas ‚Üí Crea una nueva tarea.
- PUT /tareas/1 ‚Üí Actualiza la tarea con ID 1.
- DELETE /tareas/1 ‚Üí Elimina la tarea con ID 1.
Ventajas de REST
- F√°cil de usar con HTTP.
- Ligero (especialmente usando JSON).
- Compatible con muchos lenguajes y plataformas.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
API REST o RESTful API -> Cuando se combinan API y REST, se suele hablar de una: -> üëâ API REST o RESTful API Ambos t√©rminos son correctos y muy comunes.
¬øQu√© es una RESTful API?
Una RESTful API es una API (interfaz de programaci√≥n de aplicaciones) que sigue los principios de arquitectura REST
para permitir que diferentes aplicaciones se comuniquen entre s√≠ a trav√©s de la web usando HTTP.
T√©rminos relacionados:
T√©rmino -> Significado
API REST -> Una API que sigue las reglas de REST.
RESTful API -> Lo mismo, pero enfatizando que es "plenamente" conforme a REST.
Servicio REST -> Otra forma de referirse a una API que implementa REST.
En resumen: "API REST" = "RESTful API", aunque "RESTful" es m√°s t√©cnico.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
