# Generated by Django 5.2.1 on 2025-10-02 23:28

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_initial'),
        ('product', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalProductComponents',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activated/Deactivated')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated At')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Deleted At')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('measure_unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.measureunits', verbose_name='Unit of Measure')),
                ('product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='product.products')),
                ('subproduct', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='product.products')),
            ],
            options={
                'verbose_name': 'historical Product Component',
                'verbose_name_plural': 'historical Product Components',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ProductComponents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activated/Deactivated')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('deleted_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Deleted At')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('measure_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.measureunits', verbose_name='Unit of Measure')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='product.products')),
                ('subproduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_in', to='product.products')),
            ],
            options={
                'verbose_name': 'Product Component',
                'verbose_name_plural': 'Product Components',
                'unique_together': {('product', 'subproduct')},
            },
        ),
        migrations.AddField(
            model_name='products',
            name='subproducts',
            field=models.ManyToManyField(blank=True, related_name='parent_products', through='product.ProductComponents', to='product.products'),
        ),
    ]
